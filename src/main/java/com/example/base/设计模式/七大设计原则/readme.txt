"分"字的奥秘： 活字印刷

单一职责原则：
    每个方法、每个类、每个框架都是负责一件事情。



开闭原则：
    1、对扩展新功能是开放的
    2、对修改原有功能是关闭的
    比如：
        有一个刮胡刀，刮胡刀的作用就是刮胡子，现在想让刮胡刀具备吹风机能力。
        违反开闭原则的做法就是：把吹风功能加上，可能不能刮胡子了。
        符合开闭原则的做法就是：把吹风功能加上，且没有影响以前刮胡子的功能。



依赖倒置原则：
    上层不能依赖于下层
    它们都应该依赖于抽象

    什么是上层？ 什么是下层？
    调用别人的方法的就是上层，被其他方法调用的就是下层。


迪米特法则，也叫最少知道原则（封装）
    一个类，对于其他类，要知道的越深越好。

什么是朋友？
    1、类中的字段
    2、方法的参数
    3、方法的返回值
    4、方法中实例化出来的对象

只和朋友通信



里氏替换原则：
    任何能使用父类对象的地方，都应该能透明地替换为子类对象。

    也就是说，子类对象可以随时随地替换父类对象，且替换完成以后，语法不会报错，业务逻辑也不会出现问题！


组合优于继承：（其中的组合就是指的关联关系）
    继承就是一个类继承另一个类。

    我们已经知道，类和类之间有3种：
    a. 继承
    b. 依赖
    c. 关联
        "关联可以细分为"：
            1）. 组合 ： 关系强
            2）. 聚合 ： 关系弱




面向对象的3大特点是什么，都有什么含义？
    封装：
        对外隐藏复杂的实现细节，暴露出简单的使用方法。
        隔离变化。
        提高代码重用性。
        保护数据。
    继承：
        提高代码的重用性  如果仅仅是为了重用，那么优先使用组合。
        多态的前提。
    多态：
        多条的前提：继承
        多态的作用：提高代码的扩展性 （dao， jdbc）
        多态的体现: 向上转型
        多态的限制：向上转型发生时，子类独有的成员无法使用
